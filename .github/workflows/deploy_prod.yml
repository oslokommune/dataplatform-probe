name: Deploy prod

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_PROD:
        required: true
      AWS_SECRET_ACCESS_KEY_PROD:
        required: true

jobs:
  push:
    name: Build, push image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 # v1.6.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@05b148adc31e091bafbaf404f745055d4d3bc9d2 # v1.6.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2 # v1.3.3

      - name: Set image tags
        id: tag_store
        run: |
          IMAGE_TAGS=(
              "${{ steps.login-ecr.outputs.registry }}/ok-origo-dataplatform/probe:${GITHUB_SHA}"
              "${{ steps.login-ecr.outputs.registry }}/ok-origo-dataplatform/probe:latest"
          )
          echo ::set-output name=tags::$(IFS=,; echo "${IMAGE_TAGS[*]}")

      - name: Build and push image
        uses: docker/build-push-action@7f9d37fa544684fb73bfe4835ed7214c255ce02b # v2.9.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.tag_store.outputs.tags }}

      - name: Deploy to AWS fargate
        run: |
          aws ecs update-service --force-new-deployment --service probe --cluster dataplatform-probe --region eu-west-1
